version: '3.9'
 
services:
  app:
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - .:/code
    command: "python3 manage.py runserver 0.0.0.0:8000"
 
    environment:
      - DB_HOST=db
      - DB_NAME=app
      - DB_USER=postgres
      - DB_PASS=supersecretpassword
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres
    environment:
      - POSTGRES_DB=app
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=supersecretpassword
    volumes:
      - ./data/db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5


  redis:
    image: redis:alpine
  celery:
    restart: always
    build:
      context: .
    command: celery -A diagnosis_codes_api worker -l info
    volumes:
      - .:/code
    environment:
      - DB_HOST=db
      - DB_NAME=app
      - DB_USER=postgres
      - DB_PASS=supersecretpassword
    depends_on:
      - db
      - redis
      - app
volumes:
  pgdata:


networks:
  djangonetwork:
    driver: bridge